
# Sistema de Gestión Hospitalaria - Docker Compose
# Orquestación de contenedores: MySQL + Spring Boot + React

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: hospital-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: hospital_db
      MYSQL_USER: hospital_user
      MYSQL_PASSWORD: hospital_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hospital-backend
    restart: always
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://hospital-mysql:3306/hospital_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: hospital_user
      SPRING_DATASOURCE_PASSWORD: hospital_password
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - hospital-network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hospital-frontend
    restart: always
    ports:
      - "3002:80"
    depends_on:
      - backend
    networks:
      - hospital-network

networks:
  hospital-network:
    driver: bridge

volumes:
  mysql_data:
